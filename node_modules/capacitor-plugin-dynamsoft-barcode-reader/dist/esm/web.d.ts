import { WebPlugin } from '@capacitor/core';
import { DBRPlugin, Options, ScanRegion } from './definitions';
export declare class DBRWeb extends WebPlugin implements DBRPlugin {
    private reader;
    private enhancer;
    private interval;
    private decoding;
    toggleTorch(options: {
        on: boolean;
    }): Promise<void>;
    stopScan(): Promise<void>;
    pauseScan(): Promise<void>;
    resumeScan(): Promise<void>;
    destroy(): Promise<void>;
    initialize(options?: Options): Promise<{
        success: boolean;
    }>;
    captureAndDecode(): Promise<void>;
    setScanRegion(region: ScanRegion): Promise<{
        success: boolean;
    }>;
    initRuntimeSettingsWithString(options: {
        template: string;
    }): Promise<void>;
    startScan(): Promise<void>;
    startDecoding(): void;
    stopDecoding(): void;
    private arrayBufferToBase64;
    getAllCameras(): Promise<{
        cameras?: string[] | undefined;
        message?: string | undefined;
    }>;
    selectCamera(options: {
        cameraID: string;
    }): Promise<{
        success?: boolean | undefined;
        message?: string | undefined;
    }>;
    getSelectedCamera(): Promise<{
        selectedCamera?: string | undefined;
        message?: string | undefined;
    }>;
    getResolution(): Promise<{
        resolution?: string | undefined;
        message?: string | undefined;
    }>;
    setResolution(options: {
        resolution: number;
    }): Promise<{
        success?: boolean | undefined;
        message?: string | undefined;
    }>;
    setZoom(options: {
        factor: number;
    }): Promise<{
        success?: boolean | undefined;
        message?: string | undefined;
    }>;
    setFocus(_options: {
        x: number;
        y: number;
    }): Promise<{
        success?: boolean | undefined;
        message?: string | undefined;
    }>;
    setEngineResourcePath(path: string): Promise<void>;
    setDefaultUIElementURL(url: string): Promise<void>;
}
